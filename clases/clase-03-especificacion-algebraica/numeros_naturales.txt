especificacion NUMEROS_NATURALES

usa BOOLEANOS

tipos natural

operaciones
	cero: -> natural {constructor}
	sucesor: natural -> natural {constructor}
	_ + _ : natural natural -> natural
	_ * _ : natural natural -> natural
	_ - _ : natural natural -> natural
	exp : natural natural -> natural
	_ == _ : natural natural -> bool
	_ != _ : natural natural -> bool
	_ <= _ : natural natural -> bool
	_ < _ : natural natural -> bool
	_ >= _ : natural natural -> bool
	_ > _ : natural natural -> bool
	max : natural natural -> natural
	min : natural natural -> natural
	_ / _ : natural natural -> natural
	_ % _ : natural natural -> natural
	par: natural -> bool
	impar: natural -> bool

variables
	n, m: natural

ecuaciones
	cero + n = n
	sucesor(n) + m = sucesor(n + m)
	
	cero * m = cero
	sucesor(n) * m = n * m + m

	cero - n = cero
	sucesor(n) - cero = sucesor(n)
	sucesor(n) - sucesor(m) = n - m

	exp(n, cero) = sucesor(cero)
	exp(n, sucesor(m)) = m * exp(n, m)

	cero == cero = cierto
	cero == suc(n) = falso
	[sucesor(n) == cero] = falso
	[sucesor(n) == sucesor(m)] = [n == m]

	[n != m] = ~[n == m]

	[cero <= m] = cierto
	[sucesor(n) <= cero] = falso
	[sucesor(n) <= sucesor(m)] = [n <= m]
	[n <= m] = [n - m == cero]
	[n >= m] = [m <= n]
	[n < m] = ~[n >= m]
	[n > m] = ~[n <= m]

	max(cero, m) = m
	max(sucesor(n), cero) = sucesor(n)
	max(sucesor(n), sucesor(m)) = sucesor(max(n, m))

	min(cero, m) = cero
	min(sucesor(n), cero) = cero
	min(sucesor(n), sucesor(m)) = sucesor(min(n, m))

	n / cero = error
	[n / m = cero] <- [n < m ^ m != cero]
	[n / m = sucesor((n - m) / m)] <- [n >= m ^ m != cero]

	n % cero = error
	[n % m = n] <- [n < m ^ m != cero]
	[n % m = (n - m) % m] <- [n >= m ^ m != cero]

	par(n) = [n % 2 == cero]
	impar(n) = ~par(n)

finespecificacion
